{
  "contractName": "IUniswapV2Pair",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/pauli/Projects/BinanceX/contracts/mock/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/pauli/Projects/BinanceX/contracts/mock/IUniswapV2Pair.sol\":{\"keccak256\":\"0x4c364a031ec8db06e17c9b4b0a36679119204b6e8fecc9610fc67f19d014be4e\",\"urls\":[\"bzz-raw://ac8f0d98c75f5ee8801e77d15a12b7cd37bead5932d1a2aac2c1c834b928ccd8\",\"dweb:/ipfs/QmQNhGY2TKKvybRrcUk1yot5UPzeMrovYas4SR25qYzA3B\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "interface IUniswapV2Pair {\r\n//  event Approval(address indexed owner, address indexed spender, uint value);\r\n//  event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n//  function name() external pure returns (string memory);\r\n//  function symbol() external pure returns (string memory);\r\n//  function decimals() external pure returns (uint8);\r\n//  function totalSupply() external view returns (uint);\r\n//  function balanceOf(address owner) external view returns (uint);\r\n//  function allowance(address owner, address spender) external view returns (uint);\r\n//\r\n//  function approve(address spender, uint value) external returns (bool);\r\n//  function transfer(address to, uint value) external returns (bool);\r\n//  function transferFrom(address from, address to, uint value) external returns (bool);\r\n//\r\n//  function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n//  function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n//  function nonces(address owner) external view returns (uint);\r\n//\r\n//  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n//\r\n//  event Mint(address indexed sender, uint amount0, uint amount1);\r\n//  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n//  event Swap(\r\n//    address indexed sender,\r\n//    uint amount0In,\r\n//    uint amount1In,\r\n//    uint amount0Out,\r\n//    uint amount1Out,\r\n//    address indexed to\r\n//  );\r\n//  event Sync(uint112 reserve0, uint112 reserve1);\r\n//\r\n//  function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n//  function factory() external view returns (address);\r\n//  function token0() external view returns (address);\r\n//  function token1() external view returns (address);\r\n//  function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n//  function price0CumulativeLast() external view returns (uint);\r\n//  function price1CumulativeLast() external view returns (uint);\r\n//  function kLast() external view returns (uint);\r\n//\r\n//  function mint(address to) external returns (uint liquidity);\r\n//  function burn(address to) external returns (uint amount0, uint amount1);\r\n//  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n//  function skim(address to) external;\r\n//  function sync() external;\r\n//\r\n//  function initialize(address, address) external;\r\n}\r\n",
  "sourcePath": "C:/Users/pauli/Projects/BinanceX/contracts/mock/IUniswapV2Pair.sol",
  "ast": {
    "absolutePath": "/C/Users/pauli/Projects/BinanceX/contracts/mock/IUniswapV2Pair.sol",
    "exportedSymbols": {
      "IUniswapV2Pair": [
        2096
      ]
    },
    "id": 2097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "id": 2096,
        "linearizedBaseContracts": [
          2096
        ],
        "name": "IUniswapV2Pair",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2097,
        "src": "0:2448:7"
      }
    ],
    "src": "0:2450:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/pauli/Projects/BinanceX/contracts/mock/IUniswapV2Pair.sol",
    "exportedSymbols": {
      "IUniswapV2Pair": [
        2096
      ]
    },
    "id": 2097,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "id": 2096,
        "linearizedBaseContracts": [
          2096
        ],
        "name": "IUniswapV2Pair",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2097,
        "src": "0:2448:7"
      }
    ],
    "src": "0:2450:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-17T12:44:46.606Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}